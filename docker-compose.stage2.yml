version: '3.8'

services:
  # 主应用服务 - 优化版本
  stock-school-optimized:
    build:
      context: .
      dockerfile: Dockerfile.stage2
    container_name: stock-school-stage2
    restart: unless-stopped
    
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - OPTIMIZATION_LEVEL=stage2
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/stock_school
    
    ports:
      - "8000:8000"
      - "8001:8001"  # 监控端口
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config:ro
    
    depends_on:
      - redis
      - postgres
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.5'
        reservations:
          memory: 1G
          cpus: '0.5'
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis - 高性能缓存
  redis:
    image: redis:7-alpine
    container_name: stock-school-redis
    restart: unless-stopped
    
    ports:
      - "6379:6379"
    
    volumes:
      - redis_data:/data
    
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # PostgreSQL - 优化数据库
  postgres:
    image: postgres:15-alpine
    container_name: stock-school-postgres
    restart: unless-stopped
    
    environment:
      - POSTGRES_DB=stock_school
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    
    ports:
      - "5432:5432"
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

  # Nginx - 负载均衡器
  nginx:
    image: nginx:alpine
    container_name: stock-school-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    
    depends_on:
      - stock-school-optimized
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Prometheus - 监控指标收集
  prometheus:
    image: prom/prometheus:latest
    container_name: stock-school-prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

  # Grafana - 监控仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: stock-school-grafana
    restart: unless-stopped
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    
    ports:
      - "3000:3000"
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    depends_on:
      - prometheus

  # 性能测试服务
  performance-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: stock-school-performance-test
    
    environment:
      - TARGET_URL=http://stock-school-optimized:8000
      - TEST_DURATION=300
      - CONCURRENT_USERS=100
    
    volumes:
      - ./tests/results:/app/results
    
    profiles:
      - testing
    
    depends_on:
      - stock-school-optimized

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: stock-school-network