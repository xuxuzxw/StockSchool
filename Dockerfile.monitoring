# 监控服务生产环境 Dockerfile
FROM python:3.11-slim as builder

# 设置构建参数
ARG BUILD_ENV=production

# 设置工作目录
WORKDIR /app

# 安装构建依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# 复制依赖文件
COPY requirements.txt .

# 安装Python依赖到临时目录
RUN pip install --no-cache-dir --user -r requirements.txt

# 生产镜像
FROM python:3.11-slim

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    TZ=Asia/Shanghai \
    ENVIRONMENT=production

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    ca-certificates \
    tzdata \
    && rm -rf /var/lib/apt/lists/* \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \
    && echo $TZ > /etc/timezone

# 从builder阶段复制Python包
COPY --from=builder /root/.local /root/.local

# 设置工作目录
WORKDIR /app

# 复制应用代码
COPY src/ ./src/
COPY config/ ./config/

# 创建必要的目录
RUN mkdir -p /app/logs /app/monitoring /app/cache

# 创建非root用户
RUN groupadd -r stockschool && \
    useradd -r -g stockschool -u 1000 -d /app -s /bin/bash stockschool && \
    chown -R stockschool:stockschool /app

# 切换到非root用户
USER stockschool

# 设置PATH
ENV PATH=/root/.local/bin:$PATH

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# 暴露端口
EXPOSE 8002

# 启动命令
CMD ["python", "-m", "src.monitoring.services"]